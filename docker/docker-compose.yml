volumes:
  data:
  export:
  keycloak_data:
networks:
  idm_network:

services:
  postgres-db:
    build:
      context: .
      dockerfile: dockerfile
    container_name: postgres-server
    hostname: postgres-db
    ports:
      - "127.0.0.1:5433:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - data:/var/lib/postgresql/data
      - export:/export
      - ../migrations:/migrations
    networks:
      - idm_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '512M'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.2
    container_name: keycloak-server
    hostname: keycloak
    ports:
      - "9990:8080"
      - "9991:8443"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY: edge
      KC_METRICS_ENABLED: "false"
      KC_HEALTH_ENABLED: "false"
      KC_DB: postgres
      KC_DB_URL_HOST: postgres-db
      KC_DB_URL_PORT: 5432
      KC_DB_SCHEMA: public
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
      KC_LOG_LEVEL: INFO
    depends_on:
      postgres-db:
        condition: service_healthy
    command:
      - start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./auth/import:/opt/keycloak/data/import
    networks:
      - idm_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped